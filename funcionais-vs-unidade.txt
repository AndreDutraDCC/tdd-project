1 - Independência: testes de unidade são por princípio independentes. Eles testam os métodos de uma classe e dependem apenas dela. Quaisquer dependências a classes e serviços externos podem ser removidas de diversas formas, como com o uso de test doubles. Já os testes funcionais testam uma história de usuário completa do sistema. Então eles simulam um usuário utilizando uma funcionalidade, e não uma classe, e essa funcionalidade pode depender de diversas classes e serviços. No caso de um sistema web, principalmente, é impossível que esse teste seja independente do ambiente.

2 - Velocidade: Como os testes de unidade são independentes, conforme citado antes, eles são muito mais rápidos, pois não precisam esperar o carregamento de outros módulos e classes, ou a resposta de requisições HTTP, por exemplo. Por isso, eles podem ser executados diversas vezes, para garantir que novos bugs não tenham sido adicionados ao código. Testes funcionais, pelo contrário, simulam um uso completo de uma funcionalidade do sistema, e por isso demoram muito mais para serem executados. No entanto, como o escopo desses testes é de um nível maior, eles não precisam ser executados com tanta frequência.